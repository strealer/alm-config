[Unit]
Description=Strealer Multi-Container ALM System
After=network.target docker.service
Requires=docker.service

[Service]
Type=oneshot
User=root
WorkingDirectory=/opt/alm
# Pull init container FIRST (faster startup for user registration)
ExecStartPre=/bin/bash -c 'ARCH=$(uname -m); if [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then docker compose pull alm_init_arm64; else docker compose pull alm_init_amd64; fi'
# Start init container (users can register while main app pulls)
ExecStartPre=/bin/bash -c 'ARCH=$(uname -m); if [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then docker compose up -d alm_init_arm64; else docker compose up -d alm_init_amd64; fi'
# Pull main app container (can happen while user is registering)
ExecStartPre=/bin/bash -c 'ARCH=$(uname -m); if [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then docker compose pull alm_arm64; else docker compose pull alm_amd64; fi'
# Main app container starts via depends_on after init completes
ExecStart=/bin/bash -c 'ARCH=$(uname -m); if [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then docker compose up -d --remove-orphans alm_arm64; else docker compose up -d --remove-orphans alm_amd64; fi'
ExecStop=/usr/bin/docker compose down
RemainAfterExit=yes
StandardOutput=journal
StandardError=journal
SyslogIdentifier=strealer_alm

[Install]
WantedBy=multi-user.target
